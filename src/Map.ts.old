//import {Enemy} from "./Actor";


class Map{
    currentScreenMapX: 0;
    enemies: [
        new Enemy('red', 200, 140),
        new Enemy('purple', 400, 20)
    ];
    obstacles= [
        new Platform(
            "ground",
            "black",
            0,
            canvas.height - 20,
            canvas.width * 30,
            20
        ),
        new Platform(
            "platform1",
            "black",
            80,
            canvas.height - 80,
            canvas.width,
            80
        ),
        new Platform(
            "platform2",
            "black",
            canvas.width + 180,
            canvas.height - 80,
            160,
            80
        ),
        new Platform(
            "platform3",
            "black",
            canvas.width + 280,
            canvas.height - 100,
            260,
            180
        ),
        new Platform(
            "platform11",
            "black",
            80,
            canvas.width *2,
            canvas.height - 80,
            80
        ),
        new Platform(
            "platform12",
            "black",
            canvas.width*2 + 180 ,
            canvas.height - 80,
            160,
            80
        ),
        new Platform(
            "platform13",
            "black",
            canvas.width*2 + 280,
            canvas.height - 150,
            260,
            180
        )
    ];
    getGroundWidth(){
        for(var obstacle of this.obstacles){
            if(obstacle.title == "ground"){
                return obstacle.getWidth()
            }
        }
    },
    draw: function(){
        for(var obstacle of this.obstacles){
            obstacle.draw();
        }
        for(var enemy of this.enemies){
            enemy.draw();
        }
    },
    moveEnemies: function(){
        for(var enemy of this.enemies){
            enemy.move();            
            var currentObstacle = this.getOntop(enemy);

            if(currentObstacle != null){
                enemy.jumping = false;
                enemy.setBottom( currentObstacle.getTop() );
                enemy.yVelocity = 0;
            }
        }
    },
    getOntop: function(actor){
        for(var obstacle of this.obstacles){
            if( this.isInside(actor, obstacle) ){
                return obstacle;
            }
        }
    },
    killEnemies: function(actor){
        for(var enemy of this.enemies){
            if(actor.enemyInKillZone(enemy) && (! enemy.isDead() ) ){
                return enemy;
            }
        }
    },
    attackActor: function(actor){
        for(var enemy of this.enemies){
            if(enemy.enemyInKillZone(actor) && (! enemy.isDead()) ){
                console.log("Actor attacked: " + actor );
                return actor;
            }
        }
    },
    clear: function(){
        context.clearRect(0, 0, canvas.width, canvas.height);
    },
    isInside: function(actor, obstacle){
        var inX = ( actor.x > obstacle.x )&& (actor.x < obstacle.x + obstacle.width );
        var inY = ( actor.getBottom() > obstacle.getTop() )&& (actor.getBottom() > obstacle.getTop() );
        return (inX && inY);
    }

}